<?php
# This file was generated by MediaWiki installer but is now managed manually.
# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Database settings
$wgDBtype = "mysql";
$wgDBserver = getenv('MW_DB_HOST') ?: "db";
$wgDBname = getenv('MW_DB_NAME') ?: "mediawiki";
$wgDBuser = getenv('MW_DB_USER') ?: "root";
$wgDBpassword = getenv('MW_DB_PASS') ?: "mediawiki";

# MySQL specific settings
$wgDBprefix = "";
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

## Site configuration
$wgSitename = getenv('MW_SITENAME') ?: "My Wiki";
$wgMetaNamespace = "My_Wiki";

## Server URLs and paths
$wgServer = getenv('MW_SITE_SERVER') ?: "http://localhost";
$wgScriptPath = "/w";
$wgResourceBasePath = $wgScriptPath;

## Nice URLs configuration
$wgArticlePath = "/$1";
$wgUsePathInfo = true;

## Security and permissions
# Generate secure random keys if not set via environment
$wgSecretKey = getenv('MW_SECRET_KEY') ?: bin2hex(random_bytes(32));
$wgUpgradeKey = getenv('MW_UPGRADE_KEY') ?: bin2hex(random_bytes(16));

// # Require user registration for editing
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['*']['createpage'] = false;
$wgGroupPermissions['*']['createtalk'] = false;
$wgGroupPermissions['*']['writeapi'] = false;

# Allow registered users to edit
$wgGroupPermissions['user']['edit'] = true;
$wgGroupPermissions['user']['createpage'] = true;
$wgGroupPermissions['user']['createtalk'] = true;

# Allow anonymous users to create accounts
$wgGroupPermissions['*']['createaccount'] = true;

## Administrator
$wgEmergencyContact = getenv('MW_EMERGENCY_CONTACT') ?: "admin@example.com";
$wgPasswordSender = getenv('MW_PASSWORD_SENDER') ?: "admin@example.com";

## Language and locale
$wgLanguageCode = getenv('MW_WIKI_LANG') ?: "en";

## File uploads
$wgEnableUploads = true;
$wgUploadDirectory = "/var/www/mediawiki/w/images";
$wgUploadPath = "/w/images";
$wgFileExtensions = array_merge( $wgFileExtensions, [
	'pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx'
]);

## Skins
wfLoadSkin( 'Vector' );
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'MinervaNeue' );
$wgDefaultSkin = "timeless";

## Performance and caching
$wgCacheDirectory = "/tmp";
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## Extensions
wfLoadExtension( 'VisualEditor' );
wfLoadExtension( 'VEForAll' );
wfLoadExtension( 'WikiEditor' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'CreatePageUw' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'Math' );
wfLoadExtension( 'AdminLinks' );
wfLoadExtension( 'SimpleChanges' );
wfLoadExtension( 'CommentStreams' );
wfLoadExtension( 'ParserFunctions' );   // template logic
wfLoadExtension( 'TemplateStyles' );    // scoped css in templates
wfLoadExtension( 'TemplateData' );
wfLoadExtension( 'Scribunto' );

## wikitext source mode inside VE toolbar
$wgVisualEditorEnableWikitext = true;    
$wgDefaultUserOptions['visualeditor-newwikitext'] = 1;
wfLoadExtension( 'CodeMirror' );

# Configure CreatePageUw to use VisualEditor
$wgCreatePageUwUseVE = true;

## Custom sidebar - modify the default sidebar
$wgHooks['SkinBuildSidebar'][] = function( $skin, &$sidebar ) {
    $sidebar['navigation']['Create new page'] = [
        'text' => 'Create new page',
        'href' => $skin->makeSpecialUrl( 'CreatePage' ),
        'id' => 'n-createpage',
        'active' => false
    ];
};

## Memory and execution limits
ini_set( 'memory_limit', '512M' );
$wgMaxShellMemory = 512000;

## Logo configuration
$wgLogo = "$wgScriptPath/images/c/c9/Logo.png";

## Include custom settings template
$customSettingsFile = __DIR__ . '/SettingsTemplate.php';
if ( file_exists( $customSettingsFile ) ) {
	include_once $customSettingsFile;
}